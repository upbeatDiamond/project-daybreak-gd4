Welcome to crude changelog, the log that gets facts wrong about your favorite changes.
I'm jan Wiwijen (jan Opitaman), and today I'll be discussing a pre-alpha version of a Godot project.

I'm merging July/August into one release so I can give myself more time to fix stuff.
I managed to work on a lot of lore and mechanical elements, but I have minimal code to prove it.


Codename: Project Daybreak
Update: Pre-alpha 4
TL;DR: 



Noteworthy additions:
	+ Added part of code for transfering gamepieces to proper map+portal based on map+portal index
	+ Added or otherwise developed maps: 
		+ "Hometown"
			+ Drew new house sprite suffixed "2x3"
		+ "Port Town Museum"
		* "Red Town"
		+ "Route Home->Red"
	+ Gamepieces use TraversalMode where is_running might have been used
		* Gamepiece Controllers shouldn't control speed, but contexts for different speeds
	+ GamepieceWalker (tentative name) for Gamepieces not in current scene but otherwise active
	+ Expanded GlobalDatabase in anticipation for upcoming feature tests
	+ Added PushBlock in anticipation for puzzles
	+ Added more license text
	+ Added more images, as always



Noteworthy subtractions:
	- Removed LedgeRayCast2D from the Gamepiece scene, because ledges should be events anyways



Noteworthy changes:
	* Moved Tree, Tall Grass, and Portal to the overworld/props folder
	* Gamepieces now manifest in the Y-Sort node subtree, rather than just wherever


To do eventually:
	% Replace the remaining Arkeve tutorial code after prototyping his party screen system
	% Follow the Chris' Tutorials videos, mix with GDQuest for the battle scene
	% Fix and finish the failsafe map's generation code, otherwise it's not very safe
		% Make the shader actually do something, and put it in a nicer folder
	% Fix the ledge graphics
		% Split rock and dirt tiles visually
		% Make the top edge closer match the collision box
	% Move the TitleScreen to the ActivityInterface
	% Fix or replace the D* pathfinding
	% Ensure level has an Objects and Y-Sort, then put Gamepieces there.
	% Saving and Loading
		% If the level lacks the player, put them there. Else, don't.
		% When a levelmap is chunk-loaded, place it onto the scene tree before using to avoid errs.
	% What if I make battles and dialogue Character collisions, and cutscenes as an Event collision?


General Commentary:
	> Code that is reused often, or is otherwise bulky, should be moved to "global" classes.
	> That way, I don't have to worry about if the code is duplicating functions, enums, etc.
	> Only issue then would be too many "global" (autoload) classes.
	
	> This whole thing is a redo for multiple reasons including: 
		> Being confused between code and asset licensing in the GitHub repository settings
		> Following tutorials from unknown license repositories
		> Improper credits documentation
		> Outdated version of Godot
		> Setting up is the best part once you know how. Expanding & bugfixing though...?
		
	> No sources should be less permissive than an MIT license. Everything in here should be free.
