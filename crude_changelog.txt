Welcome to crude changelog, the log that gets facts wrong about your favorite changes.
I'm jan Wiwijen (jan Opitaman), and today I'll be discussing a pre-alpha version of a Godot project.

Late 2023 - Early 2024


Codename: Project Daybreak
Update: Pre-alpha 5, "The Longest Time"
TL;DR: I found some new tutorials to follow to show I'm an independent thinker.


Noteworthy additions:
	+ Added or otherwise developed maps: 
		+ "Hometown Home"
		+ "Port Town Museum"
	+ SceneManager has been tweaked to make use of Godot 4.2's PackedScene preview in editor
		+ Scenes can now be loaded/switched to from a string, a packed scene, or a node treelet
	+ Added Warp Anchors, not to be confused with TrackStar's "waypoints" or lore "warp slates"
	+ Re-wrote the UMID generation code (older version was in a different repo)
		> needs testing to ensure uniqueness and proper bit manipulation.
	+ Added new Dictionary to the GlobalDatabase to be used for reading/writing table data.
	+ Added new Movement class to store gamepiece movement instructions
		+ Renamed Move to Technique in an effort to disambiguate.
	+ "Fixed" AnimationTree/Player issues by replacing the state tree with more code
		+ Fixed issue where walking animation wouldn't play
		+ Fixed issue where stopping walking would make the character face the screen
		+ Added crude running animation
	+ Ported over some new code from side-project Daybreak-Director
	
	+ GamepieceWalker (tentative name) for Gamepieces not in current scene but otherwise active
	+ Expanded GlobalDatabase in anticipation for upcoming feature tests
	+ Added PushBlock in anticipation for puzzles (pre-Alpha 4)
		+ Fixed PushBlock's movement code in an only slightly hacky way (pre-Alpha 5)
	+ Added more license text
	
	+ Added more images, as always


Noteworthy subtractions:
	- Removed ability for player to clone self by leaving the room they spawned in, then returning.
		- Needs testing: Likely removed ability to have many gamepieces without setting UMIDs


Noteworthy changes:
	* Gamepiece cameras should now reset smoothing upon switching maps, improving immersion.
	* Yet again changed file structure


To do eventually:
	% Replace the remaining Arkeve tutorial code after prototyping his party screen system
	% Follow the Chris' Tutorials videos, mix with GDQuest for the battle scene
	% Fix and finish the failsafe map's generation code, otherwise it's not very safe
		% Make the shader actually do something, and put it in a nicer folder
	% Fix the ledge graphics
		% Split rock and dirt tiles visually
		% Make the top edge closer match the collision box
	% Move the TitleScreen to the ActivityInterface
	% Replace the broken traces of D* with a new proposed "TrackStar" algorithm
	% Saving and Loading
		% When a levelmap is chunk-loaded, place it onto the scene tree before using to avoid errs.
	% What if I make battles and dialogue Character collisions, and cutscenes as an Event collision?


General Commentary:
	> Code that is reused often, or is otherwise bulky, should be moved to "global" classes.
	> That way, I don't have to worry about if the code is duplicating functions, enums, etc.
	> Only issue then would be too many "global" (autoload) classes.
	
	> This whole thing is a redo for multiple reasons including: 
		> Being confused between code and asset licensing in the GitHub repository settings
		> Following tutorials from unknown license repositories
		> Improper credits documentation
		> Outdated version of Godot
		> Setting up is the best part once you know how. Expanding & bugfixing though...?
		
	> No sources should be less permissive than an MIT license. Everything in here should be free.
	> All assets not made for this project need proper credit (CC-BY-4.0, SIL), or to be PD/CC-0.
		> FilmCow's sound pack license is on or past the limit of restrictiveness. Avoid for now.
	
	> We're skipping the proper drop of the previous pre-alpha, as a lot of development...
... went into lore, concepts, and other repos. And downloading assets. So much scrolling.
... and also I don't want to.
