Welcome to crude changelog, the log that gets facts wrong about your favorite changes.
I'm jan Wiwijen (jan Opitamon), and today I'll be discussing a pre-alpha version of a Godot project.

January - March, September, but mostly December 2024

Codename: Project Daybreak
Update: Pre-alpha 7/8,
TL;DR: 

Noteworthy Additions:
	+ Replaced player menu GUI
		+ Replaced inventory GUI


Noteworthy Subtractions:
	- Removed multiple addons, which shouldn't be noticable for the player


Noteworthy Changes:
	* Game now runs on a state chart system



To Do List + Constructive Commentary:
	% Repair/polish intro cinematic sequence
		% Save player data to player monster database entry
		% Fix ability entry, and make relevant to demo
	% Revise ALL tutorial based code until it both can't be detected as plagiarism...
		... and is overall more robust. Not either/or, but both of these things.
	% Add credits scroll for all code/addons, music, and sprites that can be sourced.
	% Make playable the Mayhem/Raze demo, and integrate into the unified demo
		% Or rather, rewrite it.
	% Add overworld sprites for Mom, and Barney for the upcoming demos
	% Fix and finish the failsafe map's generation code, otherwise it's not very safe
		% Make the shader actually do something, and put it in a nicer folder
	% Have ledge ensure Gamepieces don't stack on top of eachother by using raycasting.
	% Add/fix texture sheets
		% Split rock and dirt tiles visually
		% Fix the ledge art style
	% Fix portal transition to avoid overlapping transitions, which can softlock
	% Saving and Loading
		% Refactor all save/load code regarding Gamepieces
			% Instead of using signals, have all Gamepieces registered with GlobalGamepieceTransfer
				% When saving, save all members of GlobalGamepieceTransfer
				% Use global groups? This point is from before global groups were stable.
			% Gamepiece's data transfer code should be more complete
			% Gamepieces should automatically fix themselves upon being 'placed'
		% Add Gametokens and save code for that
	% Fix/expand the pause menu
		% This includes the inventory GUI and backend
	% Add tools for multiplayer connectivity


General Commentary:
	> Code that is "global" goes into the "global" folder, and should have "global" in its name.
		> Exception: if the global class is part of an addon.
		> Issue: There may soon be too many "global" classes. Solution: merge them.
	
	> Functions must be separated with 2 blank lines, uninterrupted.
	> Comments preceeding a function should explain as if it is the class documentation
	> Comments within a function should explain 'why' or 'how' rather than 'what' or 'where'
		> "this line solves an edge case related to char *"  >  [var v = 2] "this line sets v to 2"
			> I (jan Wiwijen) don't follow my own rules. This is a bad thing.
	
	> Generally, code regarding a thing should be kept within that thing, or its direct controller.
	
	> This whole thing is a redo for multiple reasons including: 
		> Being confused between code and asset licensing in the GitHub repository settings
		> Following tutorials from unknown license repositories
		> Inconsistant file naming + bad folder structure
		> Improper credits documentation
		> Outdated version of Godot
		> Setting up is the best part once you know how. Expanding & bugfixing though...?
	
	> No sources should be less permissive than a BSD 3-Clause license. 
	> Everything in here should be both free as in libre, and free as in moneys.
	> All assets not made for this project need proper credit (CC-BY-4.0, SIL), or to be PD/CC-0.
		> FilmCow's sound pack license is beyond the limit of restrictiveness. Avoid using.
	
	> The name "For The Longest Time" may not be reused for any pre-Alpha or Alpha stable releases.
	> It may be reused for Betas, or patches, but ideally use for neither.
